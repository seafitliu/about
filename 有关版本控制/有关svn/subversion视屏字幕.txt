Subversion版本库软件及TortoiseSVN使用文档v1.0

为了演示方便按照分支布局来安排版本库

创建版本库

1.导入版本库  svn://10.0.0.76 或者 svn://127.0.0.1 因为现在版本库就在本机上
  查看下是否导入成功，布局跟work目录下一致

2.导出版本库，这里为了模拟2个人，分别导出两个工作拷贝
  yeework和testwork,好，已经导出成功！

3.对工作拷贝进行修改
  yee修改文件，提交文件，目前版本库版本为2了
  test更新版本库，打开testwork工作拷贝，查看1.txt,该文件做了更新

4.更新到某个版本
  yee现在想回到最初版本，看看是否更新到指定版本了，已经成功
  yee现在又想更新到最新版本了，看看内容

5.恢复
  yee修改1.txt后，认为改的不对，想恢复回来。看我操作，发现3333位置不对，想恢复回来，好，已经
恢复

6.重命名
  yee想把1.txt改为11.txt,直接改版本库对此一无所知，所以用svn命令来操作，注意图标，现在只要提交，版本库就知道了

7.删除
  yee想删除11.txt,查看是否删除成功，只删除了工作拷贝的文件，版本库还不知道，需要提交一下。再看看版本库，成功了。
  yee发现自己删错了，想恢复。利用了逆向合并功能，哈回来啦，但是你看图标，还必须提交一下。
  
8.添加
  yee想添加一个文件22.txt,还必须提交，否则版本库是看不到的

9.忽略
  yee想让22.txt不受控制，版本库上已经没有22.txt,但工作拷贝还有，这跟del有区别

10.创建补丁
   yee对11.txt做了修改，并把补丁发送给test

11.应用补丁
   test打上yee发给他的补丁，打补丁只是在本地，提交补丁，成功！

   先将分支，再将合并
12.分支
   可以打开版本库浏览器后再迁分支，这样更直观一点，现在trunk已经迁了一支到branches/yee下了
   记住更新，好，现在
   yee修改分支下的11.txt,添加了4444，并提交。

13.合并
   现在test想合并yee分支上的功能，但他自己也做了相应的修改。
   这样合并的同时也产生了冲突，冲突在合并过程中经常出现，所以必须掌握解决冲突的方法
   左边是yee的修改，后边是自己的修改。
   好已经把yee的4444添加了进来，并且也把自己的5555添加进来
   这个是最简单的合并-冲突，有更复杂的解决冲突，需要自己经常的练习

14.重定位版本库
   有时候版本库服务器更新了地址，工作拷贝有不想删除，就可以利用这项功能
   哈，tortoisesvn的简单使用就讲到这里






谢谢！




   
   


  
